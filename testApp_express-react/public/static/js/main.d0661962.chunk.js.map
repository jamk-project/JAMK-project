{"version":3,"sources":["components/CampaignTimeline/VisTimeline.js","components/CampaignTimeline/index.js","components/TimeRangePicker/index.js","App.js","index.js"],"names":["VisTimeline","state","oldcampaigns","startDate","_this","props","endDate","datepickerRange","adDataToggle","toggleOldCampaings","setState","prevState","toggleAdData","openForm","window","open","fbAdData","this","campaignData","facebookAdData","gAdData","googleAdData","notes","info","document","getElementById","infoContent","onclick","event","target","classList","contains","innerHTML","style","display","comp","map","e","i","final","indexOf","filter","getUniqueFB","campaign","includes","innerText","undefined","getUniqueG","note","content","text","prevProps","startYear","getFullYear","startMonth","getMonth","startDay","getDate","endYear","endMonth","endDay","concat","options1","tooltip","followMouse","zoomMax","zoomMin","start","end","campaigns","Object","toConsumableArray","gcampaigns","fbcampaigns","status","items","activeCampaigns","react_default","a","createElement","id","build_default","options","groups","className","onClick","React","Component","CampaignTimeline","setTimeout","forceUpdate","google","group","Date","title","facebook","campaignDataFetched","VisTimeline_VisTimeline","TimeRangePicker","handleUpdate","formattedData","dateChanged","handleStartChange","getDateWithoutTime","handleEndChange","date","year","month","day","datestring","es","selected","onChange","App","dateRange","facebookPostsData","componentDidMount","fetchCampaignData","that","assertThisInitialized","finalcampaigns","fetch","then","response","json","console","log","datasource","client_id","values","ad","handleCampaignData","data","daterangeChanged","timeranges","components_TimeRangePicker","components_CampaignTimeline","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.d0661962.chunk.js","sourcesContent":["import Timeline from \"react-visjs-timeline\";\r\nimport React from \"react\";\r\n// import moment from \"moment\";\r\n\r\nexport default class VisTimeline extends React.Component {\r\n  state = {\r\n    oldcampaigns: false,\r\n    startDate: this.props.startDate,\r\n    endDate: this.props.endDate,\r\n    datepickerRange: true,\r\n    adDataToggle: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    let fbAdData = this.props.campaignData.facebookAdData;\r\n    let gAdData = this.props.campaignData.googleAdData;\r\n    let notes = this.props.notes;\r\n    // let posts = this.props.posts;\r\n    let info = document.getElementById(\"info-box\");\r\n    let infoContent = document.getElementById(\"info-content\");\r\n\r\n    function getUniqueFB(fbAdData, comp) {\r\n      //Turhien toistojen poisto facebook ad info näkymästä\r\n      const uniqueFB = fbAdData\r\n        .map(e => e[comp])\r\n\r\n        // store the keys of the unique objects\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n\r\n        // eliminate the dead keys & store unique objects\r\n        .filter(e => fbAdData[e])\r\n        .map(e => fbAdData[e]);\r\n\r\n      return uniqueFB;\r\n    }\r\n    function getUniqueG(gAdData, comp) {\r\n      //Turhien toistojen poisto google ad info näkymästä\r\n      const uniqueG = gAdData\r\n        .map(e => e[comp])\r\n\r\n        // store the keys of the unique objects\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n\r\n        // eliminate the dead keys & store unique objects\r\n        .filter(e => gAdData[e])\r\n        .map(e => gAdData[e]);\r\n\r\n      return uniqueG;\r\n    }\r\n\r\n    document.getElementById(\"timeline\", \"info-box button\").onclick = function(\r\n      event\r\n    ) {\r\n      if (\r\n        event.target.classList.contains(\"vis-item\") ||\r\n        event.target.classList.contains(\"vis-item-content\")\r\n      ) {\r\n        infoContent.innerHTML = \"\";\r\n        info.style.display = \"block\";\r\n\r\n        // Facebookin mainosinfon teko\r\n        getUniqueFB(fbAdData, [5]).map(campaign => {\r\n          if (campaign[4].includes(event.target.innerText)) {\r\n            if (campaign[9] === undefined) {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainos: \" +\r\n                campaign[7] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p>\";\r\n            } else {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainos: \" +\r\n                campaign[7] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p><img src='\" +\r\n                campaign[9] +\r\n                \"'/>\";\r\n            }\r\n          }\r\n          return null;\r\n        });\r\n\r\n        // Googlen mainosinfon teko\r\n        getUniqueG(gAdData, [5]).map(campaign => {\r\n          if (campaign[4].includes(event.target.innerText)) {\r\n            if (\r\n              (campaign[7] === \" --\" || campaign[7] === \"\") &&\r\n              (campaign[9] === \" --\" || campaign[9] === \"\")\r\n            ) {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainosryhmä: \" +\r\n                campaign[6] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p>\";\r\n            } else if (campaign[7] === \" --\" || campaign[7] === \"\") {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainosryhmä: \" +\r\n                campaign[6] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p><img src='\" +\r\n                campaign[9] +\r\n                \"'/>\";\r\n            } else if (campaign[9] === \" --\" || campaign[9] === \"\") {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainosryhmä: \" +\r\n                campaign[6] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p>\";\r\n            } else {\r\n              infoContent.innerHTML +=\r\n                \"<li><b>Mainos: \" +\r\n                campaign[7] +\r\n                \"</b></li><p>\" +\r\n                campaign[8] +\r\n                \"</p><img src='\" +\r\n                campaign[9] +\r\n                \"'/>\";\r\n            }\r\n          }\r\n          return null;\r\n        });\r\n\r\n        // FB post info box\r\n        /* posts.map(post => {\r\n          if (\r\n            post.content === event.target.innerText &&\r\n            post.picture_url === \"\"\r\n          ) {\r\n            infoContent.innerHTML +=\r\n              \"<li><b> Facebook julkaisu: \" +\r\n              moment(post.start).format() +\r\n              \"</b></li><p>\" +\r\n              post.message +\r\n              \"</p><p><a href='\" +\r\n              post.link +\r\n              \"'> Linkki postaukseen </a> </p>\";\r\n          } else if (\r\n            post.content === event.target.innerText &&\r\n            post.picture_url !== \"\"\r\n          ) {\r\n            infoContent.innerHTML +=\r\n              \"<li><b> Facebook julkaisu: \" +\r\n              moment(post.start).format(\"DD.MM.YYYY\") +\r\n              \"</b></li><p>\" +\r\n              post.message +\r\n              \"</p>\" +\r\n              \"<a href='\" +\r\n              post.link +\r\n              \"'> <img width=200px  src=\" +\r\n              post.picture_url +\r\n              \"></img></a>\";\r\n          }\r\n\r\n          return null;\r\n        }); */\r\n\r\n        // Client note info box\r\n        notes.map(note => {\r\n          if (note.content === event.target.innerText) {\r\n            infoContent.innerHTML +=\r\n              \"<b> \" + note.content + \"</b><p>\" + note.text + \"</p>\";\r\n          }\r\n          return null;\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let info = document.getElementById(\"info-box\");\r\n    let infoContent = document.getElementById(\"info-content\");\r\n    if (this.state.adDataToggle === true) {\r\n      //Onko ad info laatikko näkyvissä vai suljettu\r\n      infoContent.innerHTML = \"\";\r\n      info.style.display = \"none\";\r\n    } else {\r\n      infoContent.innerHTML = \"\";\r\n      info.style.display = \"block\";\r\n    }\r\n\r\n    if (\r\n      this.props.startDate !== prevProps.startDate ||\r\n      this.props.endDate !== prevProps.endDate\r\n    ) {\r\n      this.setState({ datepickerRange: true });\r\n    }\r\n  }\r\n\r\n  toggleOldCampaings = () => {\r\n    //Vanhojen kampanjoiden näyttäminen\r\n    this.setState(prevState => ({\r\n      oldcampaigns: !prevState.oldcampaigns,\r\n      datepickerRange: false\r\n    }));\r\n  };\r\n\r\n  toggleAdData = () => {\r\n    //Ad info laatikko napin funktio\r\n    this.setState(prevState => ({\r\n      adDataToggle: true,\r\n      datepickerRange: false\r\n    }));\r\n  };\r\n\r\n  openForm = () => {\r\n    window.open(\r\n      \"https://bislenz.com/markkinointi_aikajanalla/docendoBn=BR9qgkA/lomakeSt+Y2AR$.html\"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let startYear = this.props.startDate.getFullYear();\r\n    let startMonth = this.props.startDate.getMonth() + 1;\r\n    let startDay = this.props.startDate.getDate();\r\n    let endYear = this.props.endDate.getFullYear();\r\n    let endMonth = this.props.endDate.getMonth() + 1;\r\n    let endDay = this.props.endDate.getDate();\r\n\r\n    if (startMonth < 10) startMonth = `0${startMonth}`;\r\n    if (startDay < 10) startDay = `0${startDay}`;\r\n    if (endMonth < 10) endMonth = `0${endMonth}`;\r\n    if (endDay < 10) endDay = `0${endDay}`;\r\n\r\n    let strippedStartTime = `${startYear}-${startMonth}-${startDay}`;\r\n    let strippedEndTime = `${endYear}-${endMonth}-${endDay}`;\r\n\r\n    const options2 = {\r\n      //Asetukset joilla \"zoomi\" pysyy vaikka lataa lisää kampanjoita timelinelle\r\n      tooltip: { followMouse: true },\r\n      zoomMax: 100000000000,\r\n      zoomMin: 1300000000\r\n    };\r\n\r\n    const options1 = {\r\n      //Asetukset jotka tottelevat datepickerin pvm, oletus asetukset\r\n      tooltip: { followMouse: true },\r\n      zoomMax: 100000000000,\r\n      zoomMin: 1300000000,\r\n      start: strippedStartTime,\r\n      end: strippedEndTime\r\n    };\r\n\r\n    //let campaigns = this.props.notes;\r\n    // Google ja FB kampanjat samaan muuttujaan + aktiivisten kampanjoiden filtteröinti\r\n    let campaigns = [\r\n      ...this.props.gcampaigns,\r\n      ...this.props.fbcampaigns /* ,\r\n      ...this.props.licampaigns */\r\n    ];\r\n\r\n    campaigns = campaigns.filter(\r\n      campaign =>\r\n        campaign.status === \"enabled\" ||\r\n        campaign.status === \"ACTIVE\" ||\r\n        campaign.status === \"paused\" ||\r\n        campaign.status === \"PAUSED\" ||\r\n        campaign.status === \"COMPLETED\"\r\n    );\r\n\r\n    campaigns = [...campaigns, ...this.props.notes]; // , ...this.props.posts\r\n\r\n    //let campaigns = this.props.gcampaigns;\r\n\r\n    let activeCampaigns = campaigns.filter(\r\n      campaign =>\r\n        campaign.status === \"enabled\" ||\r\n        campaign.status === \"ACTIVE\" ||\r\n        campaign.status === \"auki\"\r\n    );\r\n\r\n    // Make groups for items (items' grouping is already done in campaigntimeline index.js)\r\n    let groups = [\r\n      { id: 0, content: \"Google\" },\r\n      { id: 1, content: \"Facebook\" },\r\n      /* { id: 2, content: \"LinkedIn\" }, */\r\n      { id: 3, content: \"Omat merkinnät\" }\r\n    ];\r\n\r\n    // Aktiivisten tai kaikkien kampanjoiden asetus timeline-itemeiksi\r\n    let items;\r\n    if (this.state.oldcampaigns === false) {\r\n      items = activeCampaigns;\r\n    } else {\r\n      items = campaigns;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"timeline\">\r\n          <Timeline\r\n            options={this.state.datepickerRange === true ? options1 : options2}\r\n            groups={groups}\r\n            items={items}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"timelinecontrols\">\r\n          <div id=\"green\" className=\"box\" />\r\n          <span className=\"boxtext\"> Google</span>\r\n\r\n          <div id=\"blue\" className=\"box\" />\r\n          <span className=\"boxtext\"> Facebook</span>\r\n\r\n          {/* <div id=\"liblue\" className=\"box\" />\r\n          <span className=\"boxtext\"> LinkedIn</span> */}\r\n\r\n          {/* <div id=\"blue2\" className=\"round\" />\r\n          <span className=\"boxtext\"> FB Julkaisu</span> */}\r\n\r\n          <div id=\"yellow\" className=\"box\" />\r\n          <span className=\"boxtext\"> Oma merkintä</span>\r\n\r\n          <div id=\"red\" className=\"box\" />\r\n          <span className=\"boxtext\">\r\n            {\" \"}\r\n            Epäaktiivinen\r\n            <button id=\"toggleactivebtn\" onClick={this.toggleOldCampaings}>\r\n              {this.state.oldcampaigns === false ? \"Näytä\" : \"Piilota\"}\r\n            </button>\r\n          </span>\r\n\r\n          <button className=\"timelinebtn\" onClick={this.openForm}>\r\n            <b>+ Lisää oma merkintä </b>\r\n          </button>\r\n        </div>\r\n        <div id=\"info-box\" className=\"info-box-style\">\r\n          <button id=\"xbtn\" className=\"timelinebtn\" onClick={this.toggleAdData}>\r\n            Sulje\r\n          </button>\r\n          <div id=\"info-content\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n//import \"./styles.css\";\r\nimport VisTimeline from \"./VisTimeline\";\r\n//import FBlogo from \"../../assets/FB.png\";\r\n//import Googlelogo from \"../../assets/Google.png\";\r\n//import moment from \"moment\";\r\n\r\nclass CampaignTimeline extends Component {\r\n  componentDidMount() {\r\n    // makes the timeline show up every time\r\n    setTimeout(() => {\r\n      this.forceUpdate();\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    let gcampaigns = this.props.campaignData.google.map(campaign => {\r\n      if (campaign[6] === \" --\" && campaign[4] === \"paused\") {\r\n        return {\r\n          group: 0,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          // content: \"<img src=\" + Googlelogo + \"/>\" + campaign[3],\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"paused\"\r\n        };\r\n      } else if (campaign[4] === \"paused\")\r\n        return {\r\n          group: 0,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          className: \"paused\",\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - \" +\r\n            campaign[6]\r\n        };\r\n      else if (campaign[6] === \" --\" || campaign[6] === \"\")\r\n        return {\r\n          group: 0,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö,\r\n          className: \"activeg\"\r\n        };\r\n      else\r\n        return {\r\n          group: 0,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[0] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[3] +\r\n            \" - \" +\r\n            campaign[4],\r\n          className: \"activeg\"\r\n        };\r\n    });\r\n\r\n    let fbcampaigns = this.props.campaignData.facebook.map(campaign => {\r\n      if (campaign[6] === undefined && campaign[4] !== \"ACTIVE\") {\r\n        return {\r\n          group: 1,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          //content: \"<img src=\" + FBlogo + \"/>\" + campaign[3],\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"paused\"\r\n        };\r\n      } else if (campaign[4] !== \"ACTIVE\")\r\n        return {\r\n          group: 1,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          className: \"paused\",\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - \" +\r\n            campaign[6]\r\n        };\r\n      else if (campaign[6] === undefined || campaign[6] === \"\")\r\n        return {\r\n          group: 1,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"active\"\r\n        };\r\n      else\r\n        return {\r\n          group: 1,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - \" +\r\n            campaign[6],\r\n          className: \"active\"\r\n        };\r\n    });\r\n\r\n    /* let licampaigns = this.props.campaignData.linkedin.map(campaign => {\r\n      if (campaign[6] === undefined && campaign[4] !== \"ACTIVE\") {\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          //content: \"<img src=\" + FBlogo + \"/>\" + campaign[3],\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"paused\"\r\n        };\r\n      } else if (campaign[4] !== \"ACTIVE\")\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          className: \"paused\",\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - \" +\r\n            campaign[6]\r\n        };\r\n      else if (campaign[6] === undefined)\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"activeli\"\r\n        };\r\n      else\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[4],\r\n          start: new Date(campaign[5]),\r\n          end: new Date(campaign[6]),\r\n          content: campaign[3],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[3] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            campaign[5] +\r\n            \" - \" +\r\n            campaign[6],\r\n          className: \"activeli\"\r\n        };\r\n    });\r\n */\r\n    let notes = this.props.campaignData.notes.map(campaign => {\r\n      return {\r\n        group: 3,\r\n        id: campaign[0],\r\n        status: campaign[4],\r\n        start: new Date(campaign[5]),\r\n        end: new Date(campaign[6]),\r\n        content: campaign[3],\r\n        title:\r\n          '<b style=\"font-size: 0.75em\">' +\r\n          campaign[3] +\r\n          \"</b>\" +\r\n          \"<br>\" +\r\n          campaign[5] +\r\n          \" - \" +\r\n          campaign[6], //title = Tooltipin sisältö\r\n        text: campaign[7],\r\n        className: \"note\"\r\n      };\r\n    });\r\n\r\n    // FB posts\r\n    /* let posts = this.props.postsData.map(post => {\r\n      return {\r\n        group: 1,\r\n        status: \"auki\",\r\n        start: new Date(post.created_date),\r\n        content: post.created_date,\r\n        title: post.created_date, //title = Tooltipin sisältö\r\n        message: post.message,\r\n        picture_url: post.picture_url,\r\n        link: post.link_to_page,\r\n        type: \"point\"\r\n      };\r\n    }); */\r\n\r\n    return (\r\n      <div className=\"frame\">\r\n        {this.props.campaignDataFetched ? (\r\n          <div>\r\n            <h3>Kampanjat</h3>\r\n\r\n            <VisTimeline\r\n              campaignData={this.props.campaignData}\r\n              gcampaigns={gcampaigns}\r\n              fbcampaigns={fbcampaigns}\r\n              /* licampaigns={licampaigns} */\r\n              notes={notes}\r\n              /* posts={posts} */\r\n              startDate={this.props.startDate}\r\n              endDate={this.props.endDate}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h3>Kampanjat</h3>\r\n            <div className=\"ui active centered inline loader\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CampaignTimeline;\r\n\r\n// This was used when li campaigns were fetched from campaigndata table\r\n/* \r\n\r\nlet licampaigns = this.props.campaignData.linkedin.map(campaign => {\r\n      if (campaign[8] === undefined && campaign[6] !== \"ACTIVE\") {\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[6],\r\n          start: moment(campaign[7]).format(\"MM-DD-YYYY\"),\r\n          content: campaign[5],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[5] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            moment(campaign[7]).format(\"DD.MM.YYYY\") +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"paused\"\r\n        };\r\n      } else if (campaign[6] !== \"ACTIVE\")\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[6],\r\n          start: moment(campaign[7]).format(\"MM-DD-YYYY\"),\r\n          end: moment(campaign[8]).format(\"MM-DD-YYYY\"),\r\n          content: campaign[5],\r\n          className: \"paused\",\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[5] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            moment(campaign[7]).format(\"DD.MM.YYYY\") +\r\n            \" - \" +\r\n            moment(campaign[8]).format(\"DD.MM.YYYY\")\r\n        };\r\n      else if (campaign[8] === undefined)\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[6],\r\n          start: moment(campaign[7]).format(\"MM-DD-YYYY\"),\r\n          end: new Date(),\r\n          content: campaign[5],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[5] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            moment(campaign[7]).format(\"DD.MM.YYYY\") +\r\n            \" - Ei määritettyä päättymisaikaa\", //title = Tooltipin sisältö\r\n          className: \"active\"\r\n        };\r\n      else\r\n        return {\r\n          group: 2,\r\n          id: campaign[0],\r\n          status: campaign[5],\r\n          start: moment(campaign[7]).format(\"MM-DD-YYYY\"),\r\n          end: moment(campaign[8]).format(\"MM-DD-YYYY\"),\r\n          content: campaign[5],\r\n          title:\r\n            '<b style=\"font-size: 0.75em\">' +\r\n            campaign[5] +\r\n            \"</b>\" +\r\n            \"<br>\" +\r\n            moment(campaign[7]).format(\"DD.MM.YYYY\") +\r\n            \" - \" +\r\n            moment(campaign[8]).format(\"DD.MM.YYYY\"),\r\n          className: \"active\"\r\n        };\r\n    });\r\n\r\n    const result = [];\r\n    const map = new Map();\r\n    for (const item of licampaigns) {\r\n      if (!map.has(item.id)) {\r\n        map.set(item.id, true); // set any value to Map\r\n        result.push({\r\n          group: item.group,\r\n          id: item.id,\r\n          status: item.status,\r\n          start: item.start,\r\n          end: item.end,\r\n          content: item.content,\r\n          title: item.title,\r\n          className: item.className\r\n        });\r\n      }\r\n    }\r\n    licampaigns = result;\r\n\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass TimeRangePicker extends Component {\r\n  state = {\r\n    startDate: new Date(new Date() - 24 * 60 * 60 * 1000 * 30), // nykyinen pvm - 30pv\r\n    endDate: new Date()\r\n  };\r\n\r\n  handleUpdate = () => {\r\n    let formattedData = {\r\n      start: this.state.startDate,\r\n      end: this.state.endDate\r\n    };\r\n\r\n    this.props.dateChanged(formattedData);\r\n  };\r\n\r\n  getDateWithoutTime(date) {\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n      month = `0${month}`;\r\n    }\r\n\r\n    if (day < 10) {\r\n      day = `0${day}`;\r\n    }\r\n\r\n    let datestring = `${year}-${month}-${day}`;\r\n    let dateWithoutTime = new Date(datestring);\r\n\r\n    return dateWithoutTime;\r\n  }\r\n\r\n  handleStartChange = event => {\r\n    this.setState({ startDate: this.getDateWithoutTime(event) });\r\n  };\r\n  handleEndChange = event => {\r\n    this.setState({ endDate: this.getDateWithoutTime(event) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"timerangepicker\">\r\n        {/* here we need 2 datepickers for start and end times.\r\n                datepickers have onchanges, which change the state of TimeRangePicker-component. */}\r\n\r\n        <DatePicker\r\n          className=\"pvm\"\r\n          selected={this.state.startDate}\r\n          onChange={this.handleStartChange}\r\n        />\r\n        <span> - </span>\r\n\r\n        <DatePicker\r\n          className=\"pvm\"\r\n          selected={this.state.endDate}\r\n          onChange={this.handleEndChange}\r\n        />\r\n\r\n        <button className=\" button pvm\" onClick={this.handleUpdate}>\r\n          Päivitä aikajanat\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeRangePicker;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./styles.css\";\r\nimport CampaignTimeline from \"./components/CampaignTimeline\";\r\nimport TimeRangePicker from \"./components/TimeRangePicker\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    dateRange: {\r\n      start: new Date(new Date() - 24 * 60 * 60 * 1000 * 30), // nykyinen pvm - 30pv\r\n      end: new Date()\r\n    },\r\n    campaignData: [],\r\n    facebookPostsData: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchCampaignData();\r\n  };\r\n\r\n  fetchCampaignData = () => {\r\n    let that = this;\r\n    let finalcampaigns = {};\r\n\r\n    // data fetching from db through api\r\n    fetch(\"https://test-express-react0801.azurewebsites.net/api/campaigns\")\r\n      //fetch(\"http://localhost:3001/api/campaigns\")\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log('[campaigns]: ', response)\r\n        // Google campaigns to arrays inside finalcampaigns object\r\n        finalcampaigns.google = response.map(campaign => {\r\n          if (campaign.datasource === \"googleads\" && campaign.client_id === 1) {\r\n            return Object.values(campaign);\r\n          } else return null;\r\n        });\r\n        // Filter null values (other than google campaigns)\r\n        finalcampaigns.google = finalcampaigns.google.filter(\r\n          campaign => campaign !== null\r\n        );\r\n\r\n        // Facebook campaigns to arrays inside finalcampaigns object\r\n        finalcampaigns.facebook = response.map(campaign => {\r\n          if (\r\n            campaign.datasource === \"facebookads\" &&\r\n            campaign.client_id === 1\r\n          ) {\r\n            return Object.values(campaign);\r\n          } else return null;\r\n        });\r\n\r\n        console.log('[finalcampaigns]: ', finalcampaigns)\r\n        // Filter null values (other than fb campaigns)\r\n        finalcampaigns.facebook = finalcampaigns.facebook.filter(\r\n          campaign => campaign !== null\r\n        );\r\n\r\n        // Clients own notes to arrays inside finalcampaigns object\r\n        finalcampaigns.notes = response.map(campaign => {\r\n          if (campaign.datasource === \"note\" && campaign.client_id === 1) {\r\n            return Object.values(campaign);\r\n          } else return null;\r\n        });\r\n        // Filter null values (other than notes)\r\n        finalcampaigns.notes = finalcampaigns.notes.filter(\r\n          campaign => campaign !== null\r\n        );\r\n\r\n        fetch(\"https://test-express-react0801.azurewebsites.net/api/ads\")\r\n          //fetch(\"http://localhost:3001/api/ads\")\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            console.log('[ads]: ', response)\r\n            // Google ads to arrays inside finalcampaigns object\r\n            finalcampaigns.googleAdData = response.map(ad => {\r\n              if (ad.datasource === \"googleads\" && ad.client_id === 1) {\r\n                return Object.values(ad);\r\n              } else return null;\r\n            });\r\n            // Filter null values (other than google ads)\r\n            finalcampaigns.googleAdData = finalcampaigns.googleAdData.filter(\r\n              ad => ad !== null\r\n            );\r\n            // Facebook ads to arrays inside finalcampaigns object\r\n            finalcampaigns.facebookAdData = response.map(ad => {\r\n              if (ad.datasource === \"facebookads\" && ad.client_id === 1) {\r\n                return Object.values(ad);\r\n              } else return null;\r\n            });\r\n            // Filter null values (other than fb ads)\r\n            finalcampaigns.facebookAdData = finalcampaigns.facebookAdData.filter(\r\n              ad => ad !== null\r\n            );\r\n            that.handleCampaignData(finalcampaigns);\r\n          });\r\n      });\r\n  };\r\n\r\n  handleCampaignData = data => {\r\n    this.setState(\r\n      {\r\n        campaignData: data\r\n      },\r\n      () => {\r\n        this.setState({ campaignDataFetched: true });\r\n      }\r\n    );\r\n  };\r\n\r\n  daterangeChanged = timeranges => {\r\n    this.setState({ dateRange: timeranges });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"nav\">\r\n            <div>\r\n              <div>\r\n                <TimeRangePicker dateChanged={this.daterangeChanged} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.campaignDataFetched ? (\r\n            <CampaignTimeline\r\n              campaignDataFetched={this.state.campaignDataFetched}\r\n              campaignData={this.state.campaignData}\r\n              startDate={this.state.dateRange.start}\r\n              endDate={this.state.dateRange.end}\r\n            /* postsData={this.state.facebookPostsData} */\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}